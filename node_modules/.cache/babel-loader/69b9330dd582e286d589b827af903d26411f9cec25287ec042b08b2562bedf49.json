{"ast":null,"code":"var _jsxFileName = \"/var/www/html/React/code-with-harry/src/componsents/TextForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function TextForm(props) {\n  _s();\n  const handleUpClick = () => {\n    let newText = Text.toUpperCase();\n    setText(newText);\n  };\n  const handleOnChange = event => {\n    console.log(\"value is changed nopw\");\n    setText(event.target.value);\n  };\n  const [Text, setText] = useState(\"Enter text here\");\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: props.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3\",\n        children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n          className: \"form-control\",\n          onChange: handleOnChange,\n          value: Text,\n          id: \"myBox\",\n          rows: \"8\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary\",\n        onClick: handleUpClick,\n        children: \"Convert To Uppercase\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Total no. of words\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"Total no. of characters \", text.length]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n}\n_s(TextForm, \"3mFREUlW0naRLsMNM+KeJBRwvAU=\");\n_c = TextForm;\nvar _c;\n$RefreshReg$(_c, \"TextForm\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","TextForm","props","_s","handleUpClick","newText","Text","toUpperCase","setText","handleOnChange","event","console","log","target","value","children","title","fileName","_jsxFileName","lineNumber","columnNumber","className","onChange","id","rows","onClick","text","length","_c","$RefreshReg$"],"sources":["/var/www/html/React/code-with-harry/src/componsents/TextForm.js"],"sourcesContent":["import React, {useState} from 'react'\n\nexport default function TextForm(props) {\n    const handleUpClick = ()=>{\n        let newText = Text.toUpperCase();\n        setText(newText);\n    }\n    const handleOnChange = (event)=>{\n       console.log(\"value is changed nopw\");\n       setText(event.target.value);\n    }\n    const [Text, setText] = useState(\"Enter text here\");\n  return (\n    <>\n    <div>\n        <h1>{props.title}</h1>\n        <div className=\"mb-3\">\n            <textarea className=\"form-control\" onChange={handleOnChange} value={Text} id=\"myBox\" rows=\"8\"></textarea>\n        </div>\n        <button className='btn btn-primary' onClick={handleUpClick}>Convert To Uppercase</button>\n    </div>\n    <div className=\"container\">\n        <h1>Total no. of words</h1>\n        <h1>Total no. of characters {text.length}</h1>\n    </div>\n    </>\n  )\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,QAAQ,QAAO,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAErC,eAAe,SAASC,QAAQA,CAACC,KAAK,EAAE;EAAAC,EAAA;EACpC,MAAMC,aAAa,GAAGA,CAAA,KAAI;IACtB,IAAIC,OAAO,GAAGC,IAAI,CAACC,WAAW,CAAC,CAAC;IAChCC,OAAO,CAACH,OAAO,CAAC;EACpB,CAAC;EACD,MAAMI,cAAc,GAAIC,KAAK,IAAG;IAC7BC,OAAO,CAACC,GAAG,CAAC,uBAAuB,CAAC;IACpCJ,OAAO,CAACE,KAAK,CAACG,MAAM,CAACC,KAAK,CAAC;EAC9B,CAAC;EACD,MAAM,CAACR,IAAI,EAAEE,OAAO,CAAC,GAAGZ,QAAQ,CAAC,iBAAiB,CAAC;EACrD,oBACEE,OAAA,CAAAE,SAAA;IAAAe,QAAA,gBACAjB,OAAA;MAAAiB,QAAA,gBACIjB,OAAA;QAAAiB,QAAA,EAAKb,KAAK,CAACc;MAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACtBtB,OAAA;QAAKuB,SAAS,EAAC,MAAM;QAAAN,QAAA,eACjBjB,OAAA;UAAUuB,SAAS,EAAC,cAAc;UAACC,QAAQ,EAAEb,cAAe;UAACK,KAAK,EAAER,IAAK;UAACiB,EAAE,EAAC,OAAO;UAACC,IAAI,EAAC;QAAG;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAW;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACxG,CAAC,eACNtB,OAAA;QAAQuB,SAAS,EAAC,iBAAiB;QAACI,OAAO,EAAErB,aAAc;QAAAW,QAAA,EAAC;MAAoB;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxF,CAAC,eACNtB,OAAA;MAAKuB,SAAS,EAAC,WAAW;MAAAN,QAAA,gBACtBjB,OAAA;QAAAiB,QAAA,EAAI;MAAkB;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC3BtB,OAAA;QAAAiB,QAAA,GAAI,0BAAwB,EAACW,IAAI,CAACC,MAAM;MAAA;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7C,CAAC;EAAA,eACJ,CAAC;AAEP;AAACjB,EAAA,CAzBuBF,QAAQ;AAAA2B,EAAA,GAAR3B,QAAQ;AAAA,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}